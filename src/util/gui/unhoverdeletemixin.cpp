/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "unhoverdeletemixin.h"
#include <QWidget>
#include <QEvent>
#include <QTimer>
#include <QtDebug>

namespace LeechCraft
{
namespace Util
{
#ifndef USE_QT5
	UnhoverDeleteMixin::UnhoverDeleteMixin (QWidget *watched, const char *slot)
#else
	UnhoverDeleteMixin::UnhoverDeleteMixin (QWindow *watched, const char *slot)
#endif
	: QObject (watched)
	, LeaveTimer_ (new QTimer (this))
	, ContainsMouse_ (false)
	, IgnoreNext_ (false)
	{
		watched->installEventFilter (this);

		LeaveTimer_->setSingleShot (true);
		connect (LeaveTimer_,
				SIGNAL (timeout ()),
				watched,
				slot);
	}

	void UnhoverDeleteMixin::Start (int timeout)
	{
		if (!ContainsMouse_)
			LeaveTimer_->start (timeout);
	}

	void UnhoverDeleteMixin::Stop()
	{
		LeaveTimer_->stop ();
	}

	bool UnhoverDeleteMixin::eventFilter (QObject*, QEvent *event)
	{
		switch (event->type ())
		{
		case QEvent::Enter:
			if (!IgnoreNext_)
			{
				ContainsMouse_ = true;
				LeaveTimer_->stop ();
			}
			break;
		case QEvent::Leave:
			if (!IgnoreNext_)
			{
				ContainsMouse_ = false;
				LeaveTimer_->start (800);
			}
			else
				IgnoreNext_ = false;
			break;
		default:
			break;
		}

		return false;
	}

	void UnhoverDeleteMixin::IgnoreNext ()
	{
		IgnoreNext_ = true;
	}
}
}
