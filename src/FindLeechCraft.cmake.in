# LEECHCRAFT_INCLUDE_DIR
# LEECHCRAFT_LIBRARIES
# LEECHCRAFT_FOUND

find_path(LEECHCRAFT_INCLUDE_DIR NAMES leechcraft/config.h PATH ENV)
if (LEECHCRAFT_INCLUDE_DIR)
	set (LEECHCRAFT_INCLUDE_DIR "${LEECHCRAFT_INCLUDE_DIR}/leechcraft")
endif ()
find_library(_LEECHCRAFT_UTIL NAMES leechcraft-util)
find_library(_LEECHCRAFT_XSD NAMES leechcraft-xsd)
set (LEECHCRAFT_LIBRARIES ${_LEECHCRAFT_UTIL} ${_LEECHCRAFT_XSD})
set (LEECHCRAFT_USE_FILE "${CMAKE_MODULE_PATH}/UseLeechCraft.cmake")

if(LEECHCRAFT_INCLUDE_DIR AND _LEECHCRAFT_UTIL AND _LEECHCRAFT_XSD)
	set(LEECHCRAFT_FOUND 1)
endif()

if(LEECHCRAFT_FOUND)
	message(STATUS "Found LeechCraft libraries at ${LEECHCRAFT_LIBRARIES}")
	message(STATUS "Found LeechCraft headers at ${LEECHCRAFT_INCLUDE_DIR}")
else()
	if(LEECHCRAFT_FIND_REQUIRED)
		message(FATAL_ERROR "Could NOT find required LeechCraft library, aborting")
	else()
		message(STATUS "Could NOT find LeechCraft")
	endif()
endif()

if (NOT CMAKE_VERSION VERSION_LESS 2.8.6)
	message (STATUS "CMake 2.8.6 or greater found, enabling automoc...")
	set (CMAKE_AUTOMOC TRUE)
	set (LC_NO_MOC TRUE)
endif ()

function (CreateTrVars PlugName Langs TranVar CompiledTranVar)
	string (LENGTH "${PlugName}" _pnameLength)
	set (_basename "leechcraft")
	if (_pnameLength)
		set (_basename "${_basename}_${PlugName}")
	endif ()
	foreach (_LANG ${Langs})
		set (_tran ${_tran} ${_basename}_${_LANG}.ts)
		set (_ctran ${_ctran} ${CMAKE_CURRENT_SOURCE_DIR}/${_basename}_${_LANG}.qm)
	endforeach ()
	set (${TranVar} ${_tran} PARENT_SCOPE)
	set (${CompiledTranVar} ${_ctran} PARENT_SCOPE)
endfunction ()

function (CreateTrs PlugName Langs CompiledTranVar)
	string (LENGTH "${PlugName}" _pnameLength)
	set (_basename "leechcraft")
	if (_pnameLength)
		set (_basename "${_basename}_${PlugName}")
	endif ()
	foreach (_LANG ${Langs})
		set (_tran ${_tran} ${_basename}_${_LANG}.ts)
		set (_ctran ${_ctran} ${CMAKE_CURRENT_SOURCE_DIR}/${_basename}_${_LANG}.qm)
	endforeach ()
	set (${CompiledTranVar} ${_ctran} PARENT_SCOPE)

	add_custom_command (OUTPUT ${_ctran}
		COMMAND "${QT_LRELEASE_EXECUTABLE}" ${_tran}
		DEPENDS ${_tran}
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
		)
	install (FILES ${_ctran} DESTINATION ${LC_TRANSLATIONS_DEST})
	set (${CompiledTranVar} ${_ctran} PARENT_SCOPE)
endfunction ()

function (CreateTrsUpTarget PlugName Langs Sources Forms Xml)
endfunction ()

set (LC_BINDIR @LC_BINDIR@)
set (LC_PLUGINS_DEST @LC_PLUGINS_DEST@)
set (LC_TRANSLATIONS_DEST @LC_TRANSLATIONS_DEST@)
set (LC_SETTINGS_DEST @LC_SETTINGS_DEST@)
set (LC_QML_DEST @LC_QML_DEST@)
set (LC_SHARE_DEST @LC_SHARE_DEST@)
set (LC_INSTALLEDMANIFEST_DEST @LC_INSTALLEDMANIFEST_DEST@)

if (UNIX)
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -fno-strict-aliasing -std=c++0x")
endif ()
