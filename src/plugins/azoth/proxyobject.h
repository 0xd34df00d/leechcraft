/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_AZOTH_PROXYOBJECT_H
#define PLUGINS_AZOTH_PROXYOBJECT_H
#include <QObject>
#include <QHash>
#include <QIcon>
#include <QColor>
#include <QDateTime>
#include <QRegExp>
#include "interfaces/azoth/iproxyobject.h"

namespace LeechCraft
{
namespace Azoth
{
	class ProxyObject : public QObject
					  , public IProxyObject
	{
		Q_OBJECT
		Q_INTERFACES (LeechCraft::Azoth::IProxyObject)

		QRegExp LinkRegexp_;
		QHash<QString, AuthStatus> SerializedStr2AuthStatus_;
	public:
		ProxyObject (QObject* = 0);
	public slots:
		QObject* GetSettingsManager ();
		QString GetPassword (QObject*);
		void SetPassword (const QString&, QObject*);
		QString GetAccountPassword (QObject*, bool);
		bool IsAutojoinAllowed ();
		QString StateToString (State) const;
		QString AuthStatusToString (AuthStatus) const;
		AuthStatus AuthStatusFromString (const QString&) const;
		QObject* GetAccount (const QString&) const;
		QList<QObject*> GetAllAccounts () const;
		QObject* GetEntry (const QString&, const QString&) const;
		void OpenChat (const QString&, const QString&, const QString&, const QString&) const;
		QString GetSelectedChatTemplate (QObject*, QWebFrame*) const;
		QList<QColor> GenerateColors (const QString&, QColor) const;
		QString GetNickColor (const QString&, const QList<QColor>&) const;
		QString FormatDate (QDateTime, QObject*) const;
		QString FormatNickname (QString, QObject*, const QString&) const;
		QString FormatBody (QString, QObject*) const;
		void PreprocessMessage (QObject*);
		Util::ResourceLoader* GetResourceLoader (PublicResourceLoader) const;
		QIcon GetIconForState (State) const;
		void FormatLinks (QString&);
		QStringList FindLinks (const QString&);
		QObject* CreateCoreMessage (const QString&, const QDateTime&,
				IMessage::MessageType, IMessage::Direction, QObject*, QObject*);
	};
}
}

#endif
