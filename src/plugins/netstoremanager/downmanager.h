/**********************************************************************
 *  LeechCraft - modular cross-platform feature rich internet client.
 *  Copyright (C) 2010-2015  Oleg Linkin
 *
 *  Boost Software License - Version 1.0 - August 17th, 2003
 *
 *  Permission is hereby granted, free of charge, to any person or organization
 *  obtaining a copy of the software and accompanying documentation covered by
 *  this license (the "Software") to use, reproduce, display, distribute,
 *  execute, and transmit the Software, and to prepare derivative works of the
 *  Software, and to permit third-parties to whom the Software is furnished to
 *  do so, all subject to the following:
 *
 *  The copyright notices in the Software and this entire statement, including
 *  the above license grant, this restriction and the following disclaimer,
 *  must be included in all copies of the Software, in whole or in part, and
 *  all derivative works of the Software, unless such copies or derivative
 *  works are solely in the form of machine-executable object code generated by
 *  a source language processor.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *  SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *  FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *  DEALINGS IN THE SOFTWARE.
 *
 **********************************************************************/

#pragma once

#include <QObject>
#include <QUrl>
#include <interfaces/core/icoreproxy.h>
#include <interfaces/structures.h>
#include <interfaces/idownload.h>

namespace LeechCraft
{
namespace NetStoreManager
{
	class IStorageAccount;

	class DownManager : public QObject
	{
		Q_OBJECT

		ICoreProxy_ptr Proxy_;
		QObjectList Downloaders_;
		QMap<int, QObject*> Id2Downloader_;
		QMap<int, QString> Id2SavePath_;
		QMap<int, bool> Id2OpenAfterDownloadState_;

	public:
		DownManager (ICoreProxy_ptr proxy, QObject *parent = 0);
	private:
		void SendEntity (const LeechCraft::Entity& e);
		void DelegateEntity (const LeechCraft::Entity& e,
			const QString& targetPath, bool openAfterDownload);
		void HandleProvider (QObject *provider, int id);

	public slots:
		void handleDownloadRequest (const QUrl& url,
			const QString& filePath, TaskParameters tp, bool open);
	private slots:
		void handleJobFinished (int id);
		void handleJobRemoved (int id);
		void handleJobError (int id, IDownload::Error err);
	};
}
}
