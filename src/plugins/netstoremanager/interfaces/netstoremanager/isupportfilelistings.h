/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2013  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QStringList>
#include <QtPlugin>
#include <QUrl>
#include <QMap>
#include <QDateTime>

class QStandardItem;

namespace LeechCraft
{
namespace NetStoreManager
{
	enum ListingRole
	{
		ID = Qt::UserRole + 20,
		InTrash,
		IsDirectory,
		ModifiedDate,
		Hash,
		HashType
	};

	enum ListingOp
	{
		NoneOp = 0x00,
		Delete = 0x01,
		TrashSupporting = 0x02,
		DirectorySupport = 0x04
	};
	Q_DECLARE_FLAGS (ListingOps, ListingOp);

	enum class HashAlgorithm
	{
		Md4,
		Md5,
		Sha1
	};


	struct StorageItem
	{
		QByteArray ID_;
		QByteArray ParentID_;

		QString Name_;
		QDateTime ModifyDate_;

		quint64 Size_;

		QByteArray Hash_;

		QUrl Url_;
		QUrl ShareUrl_;
		QMap<QUrl, QPair<QString, QString>> ExportLinks;

		bool Shared_;

		bool IsDirectory_;

		bool IsTrashed_;

		HashAlgorithm HashType_;

		QString MimeType_;

		StorageItem ()
		: Size_ (0)
		, Shared_ (false)
		, IsDirectory_ (false)
		, IsTrashed_ (false)
		{
		}

		bool IsValid () const
		{
			return !ID_.isEmpty ();
		}
	};

	struct Change
	{
		QByteArray ID_;
		bool Deleted_;

		QByteArray ItemID_;
		StorageItem Item_;
	};

	class ISupportFileListings
	{
	public:
		virtual ~ISupportFileListings () {}

		virtual ListingOps GetListingOps () const = 0;
		virtual HashAlgorithm GetCheckSumAlgorithm () const = 0;

		virtual void RefreshListing () = 0;

		virtual void Delete (const QList<QByteArray>& ids, bool ask = true) = 0;
		virtual void MoveToTrash (const QList<QByteArray>& ids) = 0;
		virtual void RestoreFromTrash (const QList<QByteArray>& ids) = 0;
		virtual void Copy (const QList<QByteArray>& ids,
				const QByteArray& newParentId) = 0;
		virtual void Move (const QList<QByteArray>& ids,
				const QByteArray& newParentId) = 0;

		virtual void RequestUrl (const QByteArray& id) = 0;
		virtual void CreateDirectory (const QString& name, const QByteArray& parentId) = 0;

		virtual void Rename (const QByteArray& id, const QString& newName) = 0;
		virtual void RequestChanges () = 0;

	protected:
		virtual void gotListing (const QList<StorageItem>& items) = 0;
		virtual void gotFileUrl (const QUrl& url, const QByteArray& id) = 0;

		virtual void gotChanges (const QList<Change>& changes) = 0;
		virtual void gotNewItem (const StorageItem& item, const QByteArray& parentId) = 0;
	};
}
}

Q_DECLARE_INTERFACE (LeechCraft::NetStoreManager::ISupportFileListings,
		"org.Deviant.LeechCraft.NetStoreManager.ISupportFileListings/1.0");
Q_DECLARE_OPERATORS_FOR_FLAGS (LeechCraft::NetStoreManager::ListingOps);

