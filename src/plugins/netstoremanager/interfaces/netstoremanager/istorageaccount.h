/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_NETSTOREMANAGER_INTERFACES_NETSTOREMANAGER_ISTORAGEACCOUNT_H
#define PLUGINS_NETSTOREMANAGER_INTERFACES_NETSTOREMANAGER_ISTORAGEACCOUNT_H
#include <QString>
#include <QStringList>
#include <QUrl>
#include <QMetaType>
#include <QtPlugin>
#include <interfaces/structures.h>

namespace LeechCraft
{
namespace NetStoreManager
{
	enum AccountFeature
	{
		None = 0x00,
		FileListings = 0x01,
		ProlongateFiles = 0x02
	};

	Q_DECLARE_FLAGS (AccountFeatures, AccountFeature);

	enum class UploadType
	{
		Upload,
		Update
	};

	class IStorageAccount
	{
	public:
		virtual ~IStorageAccount () {}

		virtual QObject* GetParentPlugin () const = 0;
		virtual QObject* GetQObject () = 0;

		virtual QByteArray GetUniqueID () const = 0;

		virtual QString GetAccountName () const = 0;
		virtual AccountFeatures GetAccountFeatures () const = 0;

		virtual void Upload (const QString& filepath,
				const QByteArray& parentId = QByteArray (),
				UploadType ut = UploadType::Upload,
				const QByteArray& id = QByteArray ()) = 0;
		virtual void Download (const QByteArray& id, const QString& filepath,
				TaskParameters tp, bool open) = 0;
	protected:
		virtual void upStatusChanged (const QString& status, const QString& filepath) = 0;
		virtual void upProgress (quint64 done, quint64 total, const QString& filepath) = 0;
		virtual void upError (const QString& error, const QString& filepath) = 0;
		virtual void upFinished (const QByteArray& id, const QString& filepath) = 0;
		virtual void downloadFile (const QUrl& url, const QString& filepath,
				TaskParameters tp, bool open) = 0;
	};
}
}

Q_DECLARE_OPERATORS_FOR_FLAGS (LeechCraft::NetStoreManager::AccountFeatures);

Q_DECLARE_INTERFACE (LeechCraft::NetStoreManager::IStorageAccount,
		"org.Deviant.LeechCraft.NetStoreManager.IStorageAccount/1.0");
Q_DECLARE_METATYPE (LeechCraft::NetStoreManager::IStorageAccount*);

#endif
