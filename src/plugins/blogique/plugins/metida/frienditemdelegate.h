/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2012  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QStyledItemDelegate>

class QTreeView;
class QSortFilterProxyModel;

namespace LeechCraft
{
namespace Blogique
{
namespace Metida
{
	const int CPadding = 2;

	enum ItemColorRoles
	{
		BackgroundColor = Qt::UserRole + 1,
		ForegroundColor = Qt::UserRole,

		MaxColor
	};

	enum ItemGroupRoles
	{
		GroupId = MaxColor + 1
	};

	class FriendItemDelegate : public QStyledItemDelegate
	{
		Q_OBJECT

		bool ColoringItems_;
		QTreeView *View_;
		QSortFilterProxyModel *SortModel_;

		enum Columns
		{
			UserName
		};
	public:
		FriendItemDelegate (QSortFilterProxyModel *sortModel, QTreeView *view = 0);
		void paint (QPainter *painter, const QStyleOptionViewItem& option,
				const QModelIndex& index) const;

	public slots:
		void handleColoringItemChanged ();
	};
}
}
}
