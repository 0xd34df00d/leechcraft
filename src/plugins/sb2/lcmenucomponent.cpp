/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "lcmenucomponent.h"
#include <QMenu>
#ifdef USE_QT5
#include <QQuickImageProvider>
#else
#include <QDeclarativeImageProvider>
#endif
#include <util/sys/paths.h>
#include <util/util.h>
#include <interfaces/imwproxy.h>

namespace LeechCraft
{
namespace SB2
{
	namespace
	{
#ifdef USE_QT5
		class LCMenuImageProvider : public QQuickImageProvider
#else
		class LCMenuImageProvider : public QDeclarativeImageProvider
#endif
		{
		public:
			LCMenuImageProvider ()
#ifdef USE_QT5
			: QQuickImageProvider (Image)
#else
			: QDeclarativeImageProvider (Image)
#endif
			{
			}

			QImage requestImage (const QString&, QSize*, const QSize&)
			{
				return QImage ("lcicons:/resources/images/leechcraft.svg");
			}
		};

		const QString ImageProviderID = "SB2_LCMenuImage";
	}

	LCMenuComponent::LCMenuComponent (IMWProxy *proxy, QObject *parent)
	: QObject (parent)
	, Proxy_ (proxy)
	, Component_ (QuarkComponent ("sb2", "LCMenuComponent.qml"))
	{
		Component_.DynamicProps_.append ({ "SB2_menuComponentProxy", this });
		Component_.StaticProps_.append ({ "SB2_menuComponentLCIcon", "image://" + ImageProviderID + "/icon" });
		Component_.StaticProps_.append ({ "SB2_menuTooltipString", tr ("LeechCraft menu") });
		Component_.ImageProviders_.append ({ ImageProviderID, new LCMenuImageProvider });

		Proxy_->HideMainMenu ();
	}

	QuarkComponent_ptr LCMenuComponent::GetComponent () const
	{
		return QuarkComponent_ptr (new QuarkComponent (Component_));
	}

	void LCMenuComponent::execMenu ()
	{
		Proxy_->GetMainMenu ()->exec (QCursor::pos ());
	}
}
}
