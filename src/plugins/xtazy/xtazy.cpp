/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "xtazy.h"
#include <QIcon>
#include <xmlsettingsdialog/xmlsettingsdialog.h>
#include "xmlsettingsmanager.h"

#include "tunesourcebase.h"
#include "filesource.h"
#include "lcsource.h"

#ifdef HAVE_DBUS
#include "mprissource.h"
#endif

namespace LeechCraft
{
namespace Xtazy
{
	void Plugin::Init (ICoreProxy_ptr)
	{
		SettingsDialog_.reset (new Util::XmlSettingsDialog);
		SettingsDialog_->RegisterObject (&XmlSettingsManager::Instance (),
				"xtazysettings.xml");

		LCSource_ = new LCSource (this);

#ifdef HAVE_DBUS
		TuneSources_ << new MPRISSource (this);
#endif
		TuneSources_ << new FileSource (this);
		TuneSources_ << LCSource_;
	}

	void Plugin::SecondInit ()
	{
		for (auto base : TuneSources_)
			connect (base,
					SIGNAL (tuneInfoChanged (Media::AudioInfo)),
					this,
					SLOT (publish (Media::AudioInfo)));
	}

	QByteArray Plugin::GetUniqueID () const
	{
		return "org.LeechCraft.Xtazy";
	}

	void Plugin::Release ()
	{
		qDeleteAll (TuneSources_);
	}

	QString Plugin::GetName () const
	{
		return "Xtazy";
	}

	QString Plugin::GetInfo () const
	{
		return tr ("Keeps track of the currently playing song and provides it to other plugins.");
	}

	QIcon Plugin::GetIcon () const
	{
		return QIcon ();
	}

	Util::XmlSettingsDialog_ptr Plugin::GetSettingsDialog () const
	{
		return SettingsDialog_;
	}

	QString Plugin::GetServiceName () const
	{
		return GetName ();
	}

	void Plugin::NowPlaying (const Media::AudioInfo& audio)
	{
		LCSource_->NowPlaying (audio);
	}

	void Plugin::PlaybackStopped ()
	{
		LCSource_->Stopped ();
	}

	void Plugin::LoveCurrentTrack ()
	{
	}

	void Plugin::BanCurrentTrack ()
	{
	}

	Media::AudioInfo Plugin::GetCurrentSong () const
	{
		return Previous_;
	}

	void Plugin::publish (const Media::AudioInfo& info)
	{
		if (info == Previous_)
			return;

		Previous_ = info;
		emit currentSongChanged (info);
	}
}
}

LC_EXPORT_PLUGIN (leechcraft_xtazy, LeechCraft::Xtazy::Plugin);
