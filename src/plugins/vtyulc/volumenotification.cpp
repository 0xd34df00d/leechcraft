/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2013  Vladislav Tyulbashev
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include <QTimer>
#include <QPainter>
#include <QBrush>
#include <QPaintEvent>
#include "volumenotification.h"

namespace 
{
	int globalX (QWidget *widget)
	{
		if (widget == nullptr)
			return 0;
		else
			return widget->x () + globalX (widget->parentWidget ());
	}
	
	int globalY (QWidget *widget)
	{
		if (widget == nullptr)
			return 0;
		else
			return widget->y () + globalY (widget->parentWidget ());
	}
}

namespace LeechCraft
{
namespace vlc
{
	VolumeNotification::VolumeNotification (QWidget *parent)
	: QWidget (parent, Qt::Tool | Qt::X11BypassWindowManagerHint)
	, volume (0)
	, hideTimer (new QTimer (parent))
	{
		hideTimer->setInterval (1000);
		connect (hideTimer,
				SIGNAL (timeout ()),
				this,
				SLOT (hide ()));
		
		setAttribute (Qt::WA_TranslucentBackground);
	}
	
	void VolumeNotification::showNotification (int newVolume)
	{
		hideTimer->start ();
		volume = newVolume;
		update ();
		if (!isVisible())
			show ();
	}
	
	void VolumeNotification::paintEvent (QPaintEvent *event)
	{
		QPainter p(this);
		
		p.setFont (QFont ("Arial", 20));
		p.setPen (QPen (QBrush (Qt::white), 5));
		p.drawText (1, 20, tr ("Volume: %1%").arg (volume == -1 ? 100 : volume));
			
		p.end ();
		event->accept ();
	}
	
	void VolumeNotification::resetGeometry(QWidget *widget)
	{
		setGeometry(widget->width () + globalX (widget) - 200, globalY (widget) + 50, 200, 200);
	}
}
}
