/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2013  Vladislav Tyulbashev
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QWidget>
#include <interfaces/ihavetabs.h>
#include "ui_vlccontrolswidget.h"
#include "vlcscrollbar.h"
#include "soundwidget.h"
#include "signalledwidget.h"

class QToolBar;
class QMenu;

namespace LeechCraft
{
namespace vlc
{
	class VlcPlayer;
	class VlcWidget : public QWidget
					, public ITabWidget
	{
		Q_OBJECT
		Q_INTERFACES (ITabWidget)
		
		QObject *Parent_;
		Ui::VlcControlsWidget *Ui_;
		VlcPlayer *VlcPlayer_;
		QToolBar *Bar_;
		QAction *Open_;
		QAction *Info_;
		VlcScrollBar *ScrollBar_;
		
		bool forbidFullScreen_;
		bool FullScreen_;
		QWidget *FullScreenWidget_;
		QTimer *InterfaceUpdater_;
		SignalledWidget *VlcMainWidget_;
		SignalledWidget *Controls_;
		SoundWidget *SoundWidget_;
		QMenu *ContextMenu_;
		
		void GenerateToolBar ();
		void ForbidFullScreen ();
		
	public:
		explicit VlcWidget (QWidget *parent = 0);
		~VlcWidget();
		TabClassInfo GetTabClassInfo () const;
		QObject* ParentMultiTabs ();
		void Remove ();
		QToolBar* GetToolBar () const;
		static TabClassInfo GetTabInfo ();
		void TabMadeCurrent ();
		void TabLostCurrent ();
		
	private slots:
		void addFile ();
		void updateIterface ();
		void toggleFullScreen ();
		void allowFullScreen ();
		
		void generateContextMenu (QPoint);
		void setAudioTrack (QAction*);
		void setSubtitles (QAction*);
		
		void keyPressEvent (QKeyEvent*);
		void mousePressEvent (QMouseEvent*);
		void mouseDoubleClickEvent (QMouseEvent*);
		void wheelEvent (QWheelEvent*);
		
	signals:
		void deleteMe (QWidget*);
	};
}
}
