/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2013  Vladislav Tyulbashev
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "signalledwidget.h"
#include <QMouseEvent>
#include <QKeyEvent>
#include <QWheelEvent>
#include <QPaintEvent>
#include <QPainter>
#include <QColor>
#include <QPen>

namespace LeechCraft
{
namespace vlc
{
	SignalledWidget::SignalledWidget (QWidget *parent)
	: QWidget (parent)
	{
		setContextMenuPolicy(Qt::CustomContextMenu);
		backgroundColor_ = nullptr;
	}
	
	SignalledWidget::~SignalledWidget()
	{
		if (backgroundColor_ == nullptr)
			delete backgroundColor_;
	}
	
	void SignalledWidget::keyPressEvent (QKeyEvent *event)
	{
		emit keyPress (event);
	}
	
	void SignalledWidget::mousePressEvent (QMouseEvent *event)
	{
		emit mousePress (event);
	}

	void SignalledWidget::mouseDoubleClickEvent (QMouseEvent *event)
	{
		emit mouseDoubleClick (event);
	}
	
	void SignalledWidget::wheelEvent (QWheelEvent *event)
	{
		emit wheel (event);
	}
	
	void SignalledWidget::paintEvent (QPaintEvent *event)
	{
		if (backgroundColor_ != nullptr)
		{
			QPainter p (this);
			p.setPen (QPen (*backgroundColor_));
			p.setBrush (QBrush (*backgroundColor_));
			p.drawRect (0, 0, width () - 1, height () - 1);
			p.end ();
			event->accept ();
		}
	}
	
	void SignalledWidget::SetBackGroundColor (QColor *color)
	{
		if (backgroundColor_ != nullptr)
			delete backgroundColor_;
		
		backgroundColor_ = color;
		update ();
	}
}
}
